version: "3.8"

services:
  # MySQL 서비스 제거됨 (AWS RDS 사용)
  
  redis:
    image: redis:7-alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backendnet
    restart: unless-stopped

  ai-service:
    build:
      context: ../
      dockerfile: docker/ai/Dockerfile
    container_name: ai-service
    ports:
      - "8000:8000"
    volumes:
      - ../ai/models:/app/models
    environment:
      - MODEL_PATH=/app/models/word2vec_custom.model
      - DB_HOST=memory-forest-db.cxkka2ck4ndy.ap-southeast-2.rds.amazonaws.com
      - DB_NAME=memory_forest
      - DB_USER=memoryforst
      - DB_PASSWORD=MemoryForest123!
      - DB_PORT=3306
    networks:
      - backendnet
    restart: unless-stopped

  backend:
    build:
      context: ../
      dockerfile: docker/backend/Dockerfile
    container_name: spring-backend
    depends_on:
      - redis
      - ai-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://memory-forest-db.cxkka2ck4ndy.ap-southeast-2.rds.amazonaws.com:3306/memory_forest?useSSL=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: memoryforst
      SPRING_DATASOURCE_PASSWORD: MemoryForest123!
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      AI_SERVICE_URL: http://ai-service:8000
      SPRING_PROFILES_ACTIVE: prod
      JAVA_OPTS: -Xms256m -Xmx512m -XX:+UseG1GC
      # CORS 설정 추가
      CORS_ALLOWED_ORIGINS: "http://3.106.237.100:3000,http://localhost:3000"
      CORS_ALLOWED_METHODS: "GET,POST,PUT,DELETE,OPTIONS"
      CORS_ALLOWED_HEADERS: "*"
      CORS_ALLOW_CREDENTIALS: "true"
    networks:
      - backendnet
      - webnet
    restart: unless-stopped

  frontend:
    build:
      context: ../
      dockerfile: docker/frontend/Dockerfile.dev
    container_name: react-frontend
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - WATCHPACK_POLLING=true
    depends_on:
      - backend
    ports:
      - "3000:80"
    networks:
      - webnet
    restart: unless-stopped

networks:
  backendnet:
    driver: bridge
  webnet:
    driver: bridge

volumes:
  redis-data: