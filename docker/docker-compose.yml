version: "3.8"

services:
  mysql-db:
    build:
      context: ./mysql
    container_name: mysql8-container
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: mysql
      MYSQL_DATABASE: myapp
      MYSQL_USER: app_user
      MYSQL_PASSWORD: mysql
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backendnet
  redis:
    image: redis:7-alpine
    container_name: redis-container
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - backendnet

  backend:
    build:
      context: ../backend/SpringBoot
      dockerfile: ../../docker/backend/Dockerfile
    container_name: spring-backend
    depends_on:
      - mysql-db
      - redis
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/myapp?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: app_user
      SPRING_DATASOURCE_PASSWORD: mysql
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: com.mysql.cj.jdbc.Driver
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
    networks:
      - backendnet
      - webnet

  frontend:
    build:
      context: ./frontend
    container_name: react-frontend
    depends_on:
      - backend
    networks:
      - webnet

  nginx:
    image: nginx:stable-alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/dist:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend
    networks:
      - webnet
volumes:
  mysql-data:
  redis-data:

networks:
  webnet:
  backendnet: